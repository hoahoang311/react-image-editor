import React,{useEffect,memo}from"react";import ThemeProvider from"@scaleflex/ui/theme";import App from"../App";import{AppProvider}from"../../context";import defaultConfig from"../../context/defaultConfig";import deepMerge from"../../utils/deepMerge";import assignFinetuneNamesToKonva from"../../utils/assignFinetuneNamesToKonva";import{FontsFaces,OverrideDefaultStyles}from"./globalStyles";var AssemblyPoint=function(a){var b=a.source,c=a.useCloudimage,d=a.cloudimage,e=a.actionComponents,f=a.setMeasurement;if(!b||"string"!=typeof b&&!(b instanceof HTMLImageElement))throw new Error("`source` property is required either a string of image url or a HTMLImageElement for the image that will be edited.");if(c){var g,h;if(null!==d&&void 0!==d&&null!==(g=d.imageSealing)&&void 0!==g&&g.enable&&!(null!==d&&void 0!==d&&null!==(h=d.imageSealing)&&void 0!==h&&h.salt))throw new Error("`salt` property of imageSealing object is required in cloudimage mode as long as `imageSealing` is enabled.")}useEffect(function(){assignFinetuneNamesToKonva()},[]);var i=deepMerge(defaultConfig,a);return React.createElement(React.StrictMode,null,React.createElement(ThemeProvider,{theme:i.theme},React.createElement(FontsFaces,null),React.createElement(OverrideDefaultStyles,null),React.createElement(AppProvider,{config:i},React.createElement(App,{setMeasurement:f},e))))};AssemblyPoint.defaultProps={useCloudimage:!1,cloudimage:{},actionComponents:null,setMeasurement:void 0};export default memo(AssemblyPoint);